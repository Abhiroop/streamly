name:               asyncly
version:            0.1.0
synopsis:           Beautiful Concurrent, Reactive and Streaming Composition
description:        Asyncly is best described as a superset of list transformer
                    (`ListT`) or logic programming monad (`LogicT`) with
                    additional support for concurrent operation.  Concurrency
                    enables reactivity, providing beautiful composition of
                    stateful and reactive applications using monadic folds.
                    Monadic streams of data or events can be composed using
                    serial or parallel compositions with or without fair
                    interleaving, enabling a high level composition of
                    concurrent tasks without requiring knowledge of low level
                    concurrency primitives. The programmer just expresses
                    whether a task can run in parallel with another. Threads,
                    synchronization and concurrency rate control is handled
                    automatically.
                    .
                    This library was originally inspired by the `transient`
                    package authored by Alberto G. Corona.
homepage:            http://github.com/harendra-kumar/asyncly
bug-reports:         https://github.com/harendra-kumar/asyncly/issues
license:             BSD3
license-file:        LICENSE
author:              Harendra Kumar
maintainer:          harendra.kumar@gmail.com
copyright:           2017 Harendra Kumar
category:            Control, Concurrency, Streaming, Reactivity
stability:           Experimental
build-type:          Simple
cabal-version:       >= 1.10

source-repository head
    type: git
    location: https://github.com/harendra-kumar/asyncly

flag dev
  description: Build development version
  manual: True
  default: False

flag extra-benchmarks
  description: Include comparative benchmarks
  manual: True
  default: False

flag examples
  description: Build examples
  manual: True
  default: False

library
    hs-source-dirs:    src
    exposed-modules:   Asyncly
                     , Asyncly.AsyncT
                     , Asyncly.Prelude
                     , Asyncly.Time

    default-language: Haskell2010
    ghc-options:      -Wall

    if flag(dev)
      ghc-options:    -Wmissed-specialisations
                      -Wall-missed-specialisations
                      -fno-ignore-asserts
    if impl(ghc >= 8.0)
      ghc-options:    -Wcompat
                      -Wunrecognised-warning-flags
                      -Widentities
                      -Wincomplete-record-updates
                      -Wincomplete-uni-patterns
                      -Wredundant-constraints
                      -Wnoncanonical-monad-instances
                      -Wnoncanonical-monadfail-instances

    build-depends:     base              >= 4.8   &&  < 5
                     , atomic-primops    >= 0.8   && < 0.9
                     , containers        >= 0.5   && < 0.6
                     , exceptions        >= 0.8   && < 0.9
                     , lifted-base       >= 0.2   && < 0.3
                     , lockfree-queue    >= 0.2.3 && < 0.3
                     , monad-control     >= 1.0   && < 2
                     , mtl               >= 2.2   && < 3
                     , stm               >= 2.4.3 && < 2.5
                     , transformers      >= 0.4   && < 0.6
                     , transformers-base >= 0.4   && < 0.5
  if impl(ghc < 8.0)
    build-depends:
        semigroups    >= 0.18   && < 0.19

test-suite test
  type: exitcode-stdio-1.0
  main-is: Main.hs
  hs-source-dirs: test
  ghc-options:  -O0 -Wall
  if flag(dev)
    ghc-options:    -Wmissed-specialisations
                    -Wall-missed-specialisations
  if impl(ghc >= 8.0)
    ghc-options:    -Wcompat
                    -Wunrecognised-warning-flags
                    -Widentities
                    -Wincomplete-record-updates
                    -Wincomplete-uni-patterns
                    -Wredundant-constraints
                    -Wnoncanonical-monad-instances
                    -Wnoncanonical-monadfail-instances
  build-depends:
      asyncly
    , base              >= 4.8   && < 5
    , hspec             >= 2.0   && < 3
    , containers        >= 0.5   && < 0.6
  if impl(ghc < 8.0)
    build-depends:
        transformers    >= 0.4   && < 0.6
  default-language: Haskell2010

benchmark bench
  type: exitcode-stdio-1.0
  main-is: Main.hs
  hs-source-dirs: benchmark
  ghc-options:  -O2 -Wall
  if flag(dev)
    ghc-options:    -Wmissed-specialisations
                    -Wall-missed-specialisations
                    -fno-ignore-asserts
  if impl(ghc >= 8.0)
    ghc-options:    -Wcompat
                    -Wunrecognised-warning-flags
                    -Widentities
                    -Wincomplete-record-updates
                    -Wincomplete-uni-patterns
                    -Wredundant-constraints
                    -Wnoncanonical-monad-instances
                    -Wnoncanonical-monadfail-instances
  build-depends:
      asyncly
    , atomic-primops      >= 0.8   && < 0.9
    , base                >= 4.8   && < 5
    , criterion           >= 1     && < 2
    , mtl                 >= 2.2   && < 3

  if impl(ghc < 8.0)
    build-depends:
        transformers    >= 0.4   && < 0.6

  if flag(extra-benchmarks)
    cpp-options: -DEXTRA_BENCHMARKS
    build-depends:
        list-t              >= 0.4   && < 2
      , logict              >= 0.6   && < 0.7
      , machines            >= 0.5   && < 0.7
      , simple-conduit      >= 0.6   && < 0.7
      , transient           >= 0.4   && < 0.6
  default-language: Haskell2010

executable circle-mouse
  main-is: circle-mouse.hs
  hs-source-dirs:  examples
  if flag(examples)
    buildable: True
    build-Depends:
        asyncly
      , base >= 4.8   && < 5
      , SDL  >= 0.6.5 && < 0.7
  else
    buildable: False

executable echo-loop
  main-is: echo-loop.hs
  hs-source-dirs:  examples
  if flag(examples)
    buildable: True
    build-Depends:
        asyncly
      , base >= 4.8   && < 5
  else
    buildable: False

executable fastest
  main-is: fastest.hs
  hs-source-dirs:  examples
  if flag(examples)
    buildable: True
    build-Depends:
        asyncly
      , base >= 4.8   && < 5
      , http-conduit
  else
    buildable: False

executable game
  main-is: game.hs
  hs-source-dirs:  examples
  if flag(examples)
    buildable: True
    build-Depends:
        asyncly
      , base >= 4.8   && < 5
      , mtl  >= 2.2   && < 3
  else
    buildable: False

executable listdir
  main-is: listdir.hs
  hs-source-dirs:  examples
  if flag(examples)
    buildable: True
    build-Depends:
        asyncly
      , base >= 4.8   && < 5
      , path
      , path-io
  else
    buildable: False

executable loops
  main-is: loops.hs
  hs-source-dirs:  examples
  if flag(examples)
    buildable: True
    build-Depends:
        asyncly
      , base >= 4.8   && < 5
  else
    buildable: False

executable map-reduce
  main-is: map-reduce.hs
  hs-source-dirs:  examples
  if flag(examples)
    buildable: True
    build-Depends:
        asyncly
      , base >= 4.8   && < 5
  else
    buildable: False

executable mergesort
  main-is: mergesort.hs
  hs-source-dirs:  examples
  if flag(examples)
    buildable: True
    build-Depends:
        asyncly
      , base >= 4.8   && < 5
      , random
  else
    buildable: False

executable nested-loops
  main-is: nested-loops.hs
  hs-source-dirs:  examples
  if flag(examples)
    buildable: True
    build-Depends:
        asyncly
      , base >= 4.8   && < 5
      , random
  else
    buildable: False

executable parallel-loops
  main-is: parallel-loops.hs
  hs-source-dirs:  examples
  if flag(examples)
    buildable: True
    build-Depends:
        asyncly
      , base >= 4.8   && < 5
      , random
  else
    buildable: False
